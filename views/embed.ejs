<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Choose Your Backdrop</title>
  <!-- Tailwind CSS CDN -->
  <script src="https://cdn.tailwindcss.com"></script>
  <style>body { margin: 0; padding: 0; }</style>
  <!-- Custom user CSS -->
  <% if (widgetOpts.customCss) { %>
    <style><%= widgetOpts.customCss %></style>
  <% } %>
  <!-- Caption styling -->
  <style>
    .caption {
      display: block;
      width: 100%;
      margin: 0;
      <% if (widgetOpts.captionBgColor) { %>background-color: <%= widgetOpts.captionBgColor %> !important;<% } %>
      <% if (widgetOpts.captionFontColor) { %>color: <%= widgetOpts.captionFontColor %> !important;<% } %>
      <% if (widgetOpts.captionFontFamily) { %>font-family: <%= widgetOpts.captionFontFamily %>;<% } %>
      padding: 0.5rem;
      text-align: center;
    }
  </style>
</head>
<body class="bg-gray-100 text-gray-900 font-sans"
      <% if (widgetOpts.backgroundColor) { %> style="background-color:<%= widgetOpts.backgroundColor %>;"<% } %>>

  <div class="max-w-7xl mx-auto p-6">
    <h1 class="text-4xl font-bold mb-4 text-center">Choose Your Backdrop</h1>
    <!-- Controls: Search, Sort, Category (optional) -->
    <div class="mb-6">
      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
        <% if (widgetOpts.search) { %>
        <!-- Search -->
        <input id="searchInput" type="text" placeholder="Search backdrops..." aria-label="Search backdrops"
               class="flex-1 px-4 py-2 border rounded shadow-sm focus:outline-none focus:ring text-gray-800" />
        <% } %>
        <% if (widgetOpts.sort) { %>
        <!-- Sort -->
        <div class="flex items-center space-x-2">
          <label for="sortSelect" class="font-medium">Sort:</label>
          <select id="sortSelect" class="px-3 py-2 border rounded focus:outline-none text-gray-800">
            <option value="az">Name A → Z</option>
            <option value="za">Name Z → A</option>
          </select>
        </div>
        <% } %>
        <% if (widgetOpts.category) { %>
        <!-- Category -->
        <div class="flex items-center space-x-2">
          <label for="categorySelect" class="font-medium">Category:</label>
          <select id="categorySelect" class="px-3 py-2 border rounded focus:outline-none text-gray-800">
            <option value="">All</option>
            <% categories.forEach(c => { %>
              <option value="<%= c.toLowerCase() %>"><%= c %></option>
            <% }); %>
          </select>
        </div>
        <% } %>
      </div>
    </div>
    <!-- Gallery -->
    <div id="gallery" class="grid gap-6 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
    <% backdrops.forEach(b => { %>
        <div role="button" tabindex="0" aria-label="View <%= b.name %> backdrop"
             class="relative overflow-hidden rounded-xl transform transition hover:scale-105 bg-white cursor-pointer"
             data-url="<%= b.url %>" data-name="<%= b.name %>">
          <img src="<%= b.url %>" alt="<%= b.name %>" loading="lazy"
               class="w-full h-auto object-cover opacity-0 transition-opacity duration-500" />
          <!-- Always-visible name below image -->
          <p class="caption p-2 text-center font-medium"><%= b.name %></p>
        </div>
    <% }); %>
    </div>
  </div>

  <!-- Lightbox Modal -->
  <div id="lightbox" role="dialog" aria-modal="true" aria-labelledby="lightbox-title"
       class="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 opacity-0 pointer-events-none transition-opacity duration-300">
    <div class="relative bg-white rounded-lg overflow-hidden w-full max-w-md md:max-w-lg mx-auto">
      <button id="close" class="absolute top-2 right-2 text-gray-600 hover:text-gray-900 text-2xl">&times;</button>
      <img id="lightbox-img" src="" class="w-full h-auto" alt="Backdrop" />
      <p id="lightbox-title" class="p-4 text-center font-semibold text-xl"></p>
    </div>
  </div>

  <script>
    // Lightbox open
    document.querySelectorAll('[data-url]').forEach(card => {
      card.addEventListener('click', () => {
        const url = card.getAttribute('data-url');
        const name = card.getAttribute('data-name');
        document.getElementById('lightbox-img').src = url;
        document.getElementById('lightbox-title').textContent = name;
        document.getElementById('lightbox').classList.remove('opacity-0', 'pointer-events-none');
      });
    });
    // Lightbox close
    document.getElementById('close').onclick = () => {
      document.getElementById('lightbox').classList.add('opacity-0', 'pointer-events-none');
    };
    // Filter & Sort Controls
    const gallery = document.getElementById('gallery');
    const cards = Array.from(gallery.querySelectorAll('[data-url]'));
    const searchInput = document.getElementById('searchInput');
    const sortSelect = document.getElementById('sortSelect');
    const categorySelect = document.getElementById('categorySelect');
    function filterAndSort() {
      const searchTerm = searchInput ? searchInput.value.toLowerCase() : '';
      const sortOrder  = sortSelect ? sortSelect.value : '';
      const category   = categorySelect ? categorySelect.value : '';
      let filtered = cards.filter(card => {
        const name = card.getAttribute('data-name').toLowerCase();
        const cat  = name.split(' ')[0];
        const matchesSearch   = !searchInput || name.includes(searchTerm);
        const matchesCategory = !categorySelect || !category || cat === category;
        return matchesSearch && matchesCategory;
      });
      if (sortOrder === 'az') {
        filtered.sort((a, b) => a.getAttribute('data-name').localeCompare(b.getAttribute('data-name')));
      } else if (sortOrder === 'za') {
        filtered.sort((a, b) => b.getAttribute('data-name').localeCompare(a.getAttribute('data-name')));
      }
      gallery.innerHTML = '';
      filtered.forEach(card => gallery.appendChild(card));
    }
    if (searchInput) searchInput.addEventListener('input', filterAndSort);
    if (sortSelect) sortSelect.addEventListener('change', filterAndSort);
    if (categorySelect) categorySelect.addEventListener('change', filterAndSort);

    // Lazy-load: fade in images
    document.querySelectorAll('#gallery [data-url] img').forEach(img => {
      img.addEventListener('load', () => {
        img.classList.remove('opacity-0');
      });
      // If already loaded (cache), remove opacity immediately
      if (img.complete) {
        img.classList.remove('opacity-0');
      }
    });

    // Close lightbox on overlay click (touch-friendly)
    const lightboxEl = document.getElementById('lightbox');
    lightboxEl.addEventListener('click', e => {
      if (e.target.id === 'lightbox') {
        lightboxEl.classList.add('opacity-0', 'pointer-events-none');
      }
    });
  </script>
</body>
</html>