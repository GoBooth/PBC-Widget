<%- include('../partials/header') %>
<%- include('../partials/dashboardTabs') %>

<div class="min-h-screen bg-gradient-to-br from-purple-900 via-indigo-900 to-black p-6">
  <div class="container mx-auto px-4 py-4 bg-gray-800 bg-opacity-80 rounded-2xl shadow-lg text-gray-100">
  <!-- Widget Options Form -->
  <form method="POST" action="/dashboard/widget" class="bg-gray-700 bg-opacity-90 shadow-lg p-6 rounded-xl mb-6 text-gray-100">
    <h2 class="text-lg font-semibold mb-2">Widget Options</h2>
    <div class="space-y-2">
      <label class="inline-flex items-center">
        <input type="checkbox" name="search" <%= widgetOpts.search ? 'checked' : '' %> class="form-checkbox" />
        <span class="ml-2">Enable Search Box</span>
      </label>
      <label class="inline-flex items-center">
        <input type="checkbox" name="sort" <%= widgetOpts.sort ? 'checked' : '' %> class="form-checkbox" />
        <span class="ml-2">Enable Sort Options</span>
      </label>
      <label class="inline-flex items-center">
        <input type="checkbox" name="category" <%= widgetOpts.category ? 'checked' : '' %> class="form-checkbox" />
        <span class="ml-2">Enable Category Filter</span>
      </label>
      <label class="inline-flex items-center">
        <input type="checkbox" name="showAll" <%= widgetOpts.showAll ? 'checked' : '' %> class="form-checkbox" />
        <span class="ml-2">Show all backdrops (override selections)</span>
      </label>
    </div>
    <div class="mt-4">
      <label for="customCss" class="block mb-1 font-medium">Custom CSS (optional)</label>
      <textarea name="customCss" id="customCss" rows="3" class="w-full border p-2 rounded"><%= widgetOpts.customCss %></textarea>
    </div>
    <div class="mt-4">
      <label for="backgroundColor" class="block mb-1 font-medium">Background Color</label>
      <input type="color" id="backgroundColor" name="backgroundColor"
             value="<%= widgetOpts.backgroundColor || '#ffffff' %>"
             class="h-8 w-12 border rounded" />
    </div>
    <div class="mt-4">
      <label for="captionBgColor" class="block mb-1 font-medium">Caption Background Color</label>
      <input type="color" id="captionBgColor" name="captionBgColor"
             value="<%= widgetOpts.captionBgColor || '#f7fafc' %>"
             class="h-8 w-12 border rounded" />
    </div>
    <div class="mt-4">
      <label for="captionFontColor" class="block mb-1 font-medium">Caption Font Color</label>
      <input type="color" id="captionFontColor" name="captionFontColor"
             value="<%= widgetOpts.captionFontColor || '#1a202c' %>"
             class="h-8 w-12 border rounded" />
    </div>
    <div class="mt-4">
      <label for="captionFontFamily" class="block mb-1 font-medium">Caption Font Family</label>
      <select id="captionFontFamily" name="captionFontFamily"
              class="w-full bg-gray-700 text-white placeholder-gray-400 border border-gray-600 px-2 py-1 rounded focus:outline-none focus:ring-2 focus:ring-indigo-500">
        <option value="" <%= !widgetOpts.captionFontFamily ? 'selected' : '' %>>Default</option>
        <option value="Arial, sans-serif" <%= widgetOpts.captionFontFamily==='Arial, sans-serif' ? 'selected' : '' %>>Arial</option>
        <option value="'Helvetica Neue', Helvetica, sans-serif" <%= widgetOpts.captionFontFamily==="'Helvetica Neue', Helvetica, sans-serif" ? 'selected' : '' %>>Helvetica Neue</option>
        <option value="Georgia, serif" <%= widgetOpts.captionFontFamily==='Georgia, serif' ? 'selected' : '' %>>Georgia</option>
        <option value="'Courier New', monospace" <%= widgetOpts.captionFontFamily==="'Courier New', monospace" ? 'selected' : '' %>>Courier New</option>
        <option value="'Times New Roman', Times, serif" <%= widgetOpts.captionFontFamily==="'Times New Roman', Times, serif" ? 'selected' : '' %>>Times New Roman</option>
      </select>
    </div>
    <button type="submit" class="mt-3 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Save Widget Options</button>
  </form>
  <% // Single Backdrop Preview to test caption styling %>
  <% const sel = currentUser.selectedBackdrops || []; %>
  <% const ids = Array.isArray(sel) ? sel : [sel]; %>
  <% const sampleId = ids.length > 0 ? ids[0] : null; %>
  <% let sampleName = ''; %>
  <% if (sampleId) { %>
    <% if (currentUser.backdropNames && currentUser.backdropNames[sampleId]) { %>
      <% sampleName = currentUser.backdropNames[sampleId]; %>
    <% } else { %>
      <% sampleName = sampleId.replace(/\.[^/.]+$/, ''); %>
    <% } %>
  <% } %>
  <div class="mb-6">
    <h2 class="text-lg font-semibold mb-2">Single Backdrop Preview</h2>
    <% if (sampleId) { %>
      <div class="max-w-xs mx-auto bg-white p-4 rounded shadow">
        <img src="/Backdrop_photos/<%= sampleId %>" alt="<%= sampleName %>"
             class="w-full h-auto mb-2 rounded" />
        <p class="text-center font-medium p-2"
           style="<% if (widgetOpts.captionBgColor) { %>background-color:<%= widgetOpts.captionBgColor %>;<% } %><% if (widgetOpts.captionFontColor) { %>color:<%= widgetOpts.captionFontColor %>;<% } %><% if (widgetOpts.captionFontFamily) { %>font-family:<%= widgetOpts.captionFontFamily %>;<% } %>"><%= sampleName %></p>
      </div>
    <% } else { %>
      <p class="text-gray-300 italic">No backdrop selected. Please pick at least one in the Backdrops tab.</p>
    <% } %>
  </div>
  <h1 class="text-2xl font-bold mb-4">Widget</h1>
  <div class="mb-4">
    <p class="font-medium">Your unique API key:</p>
    <div class="flex items-center space-x-2">
      <code id="apiKey" class="flex-1 bg-gray-100 p-2 rounded"><%= currentUser.apiKey %></code>
      <button id="copyKeyBtn" class="px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600" aria-label="Copy API key">Copy</button>
      <form method="POST" action="/dashboard/widget/regenerate">
        <button type="submit" class="px-3 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600" aria-label="Regenerate API key">Regenerate Key</button>
      </form>
    </div>
  </div>

  <h2 class="text-lg font-semibold mb-2">Embed Standard Widget</h2>
  <div class="relative mb-4">
    <pre id="embedCode" class="bg-gray-800 bg-opacity-80 text-gray-100 p-2 rounded overflow-x-auto"><%= `<iframe src=\"${embedUrl}\" style=\"width:100%;height:500px;border:none;\"></iframe>` %></pre>
    <button id="copyEmbedBtn" class="absolute top-2 right-2 px-2 py-1 bg-green-500 text-white rounded hover:bg-green-600 text-sm" aria-label="Copy embed code">Copy</button>
  </div>
  <h2 class="text-lg font-semibold mb-2">Live Preview</h2>
  <div class="mb-4">
    <iframe src="<%= embedUrl %>" style="width:100%;height:500px;border:none;" class="rounded-lg shadow"></iframe>
  </div>
  <script>
    // Copy API key
    document.getElementById('copyKeyBtn').addEventListener('click', () => {
      const keyEl = document.getElementById('apiKey');
      navigator.clipboard.writeText(keyEl.textContent.trim()).then(() => {
        alert('API key copied to clipboard');
      });
    });
    // Copy embed snippet
    document.getElementById('copyEmbedBtn').addEventListener('click', () => {
      const pre = document.getElementById('embedCode');
      const text = pre.textContent;
      navigator.clipboard.writeText(text.trim()).then(() => {
        alert('Embed code copied to clipboard');
      });
    });
  </script>
  <script>
    // Live preview: rebuild embed iframe on option changes
    (function() {
      const iframe = document.querySelector('iframe');
      const pre = document.getElementById('embedCode');
      const searchCb = document.querySelector('input[name="search"]');
      const sortCb = document.querySelector('input[name="sort"]');
      const categoryCb = document.querySelector('input[name="category"]');
      const bgColorInput = document.getElementById('backgroundColor');
      const captionBgInput = document.getElementById('captionBgColor');
      const captionColorInput = document.getElementById('captionFontColor');
      const fontFamilySelect = document.getElementById('captionFontFamily');
      function updateEmbed() {
        const baseUrl = iframe.src.split('?')[0];
        const params = [];
        params.push(`search=${searchCb.checked ? 1 : 0}`);
        params.push(`sort=${sortCb.checked ? 1 : 0}`);
        params.push(`category=${categoryCb.checked ? 1 : 0}`);
        if (bgColorInput.value) params.push('bgColor=' + encodeURIComponent(bgColorInput.value));
        if (captionBgInput.value) params.push('captionBgColor=' + encodeURIComponent(captionBgInput.value));
        if (captionColorInput.value) params.push('captionFontColor=' + encodeURIComponent(captionColorInput.value));
        if (fontFamilySelect.value) params.push('captionFontFamily=' + encodeURIComponent(fontFamilySelect.value));
        const url = baseUrl + '?' + params.join('&');
        iframe.src = url;
        pre.textContent = `<iframe src="${url}" style="width:100%;height:500px;border:none;"></iframe>`;
      }
      [searchCb, sortCb, categoryCb, bgColorInput, captionBgInput, captionColorInput, fontFamilySelect].forEach(el => {
        el.addEventListener('input', updateEmbed);
        el.addEventListener('change', updateEmbed);
      });
    })();
  </script>
  </div>
</div>